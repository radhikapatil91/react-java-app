{"version":3,"sources":["components/FooterComponent.js","components/HeaderComponent.js","service/EmployeeService.js","components/ListEmployeeComponent.js","components/CreateEmployeeComponent.js","components/ViewEmployeeComponent.js","App.js","serviceWorker.js","index.js"],"names":["FooterComponent","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","className","Component","HeaderComponent","apply","arguments","href","EMPLOYEE_API_URL","service_EmployeeService","axios","get","employee","post","id","put","delete","ListEmployeeComponent","employees","addEmployee","bind","assertThisInitialized","editEmployee","deleteEmployee","viewEmployee","_this2","EmployeeService","getEmployees","then","res","setState","data","history","push","concat","console","log","_this3","deleteEmployeeById","filter","_this4","onClick","map","firstName","lastName","emailId","CreateEmployeeComponent","changeFirstName","e","target","changeLastName","changeEmailId","saveEmployee","preventDefault","JSON","stringify","createEmployee","updateEmployeeById","match","params","getEmployeeById","emp","type","placeholder","onChange","style","marginLeft","cancel","ViewEmployeeComponent","App","react_router_dom","components_HeaderComponent","marginTop","react_router","exact","path","component","components_FooterComponent","Boolean","window","location","hostname","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cfc678f7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class FooterComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className=\"footer\">\r\n                    <span className=\"text-muted\">All Rights Reserved @Radhika</span>\r\n                </footer>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponent\r\n","import React, { Component } from 'react'\r\n\r\nexport class HeaderComponent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n                <div> <a className=\"navbar-brand\" href=\"https://javaguides.net\">Employee Management System</a></div>\r\n\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent\r\n","import axios from 'axios'\r\nconst EMPLOYEE_API_URL = \"http://localhost:8080/api/v1/employees\"\r\nclass EmployeeService {\r\n    \r\n    getEmployees(){\r\n        return axios.get(EMPLOYEE_API_URL);\r\n    }\r\n    createEmployee(employee){\r\n        return axios.post(EMPLOYEE_API_URL, employee)\r\n    }\r\n    getEmployeeById(id){\r\n        return axios.get(EMPLOYEE_API_URL+'/'+id);\r\n    }\r\n    updateEmployeeById(employee,id){\r\n        return axios.put(EMPLOYEE_API_URL+'/'+id,employee);\r\n    }\r\n    deleteEmployeeById(id){\r\n        return axios.delete(EMPLOYEE_API_URL+'/'+id);\r\n    }\r\n}\r\n\r\nexport default new EmployeeService()\r\n","import React, { Component } from 'react'\r\n//import { EmployeeService } from '../service/EmployeeService'\r\n//import axios from 'axios'\r\nimport  EmployeeService  from '../service/EmployeeService'\r\n//const EMPLOYEE_API_URL = \"http://localhost:8080/api/v1/employees\"\r\nexport class ListEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employees : []\r\n        }\r\n        this.addEmployee = this.addEmployee.bind(this)\r\n        this.editEmployee = this.editEmployee.bind(this)\r\n        this.deleteEmployee = this.deleteEmployee.bind(this)\r\n        this.viewEmployee = this.viewEmployee.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        //axios.get(EMPLOYEE_API_URL)\r\n        EmployeeService.getEmployees()\r\n        .then(res=>{\r\n            this.setState({\r\n                employees : res.data\r\n            })\r\n        })\r\n    }\r\n    addEmployee(){ \r\n           this.props.history.push('/add-employee/-1')\r\n    }\r\n    editEmployee(id){\r\n        this.props.history.push(`/add-employee/${id}`)\r\n        console.log(\"id\"+id)\r\n    }\r\n    viewEmployee(id){\r\n        this.props.history.push(`/view-employee/${id}`)\r\n    }\r\n    deleteEmployee(id){\r\n        \r\n        EmployeeService.deleteEmployeeById(id).then(res=>{\r\n            this.setState({ employees:this.state.employees.filter(employee=>employee.id!==id)})\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-centre\">List Of Employees</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addEmployee}>Add Employee</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bodered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Employee First Name</th>\r\n                                <th>Employee Second Name</th>\r\n                                <th>Employee Email Id</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.employees.map(\r\n                                    employee => (\r\n                                        <tr key={employee.id}>\r\n                                            <td>{employee.firstName}</td>\r\n                                            <td>{employee.lastName}</td>\r\n                                            <td>{employee.emailId}</td>\r\n                                            \r\n                                            <td><button className=\"btn btn-info\" onClick={()=>this.editEmployee(employee.id)}>Update</button></td>\r\n                                            <td><button className=\"btn btn-danger\" onClick={()=>this.deleteEmployee(employee.id)}>Delete</button></td>\r\n                                            <td><button className=\"btn btn-success\" onClick={()=>this.viewEmployee(employee.id)}>View</button></td>\r\n                                        </tr>\r\n                                    )\r\n                                    \r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent\r\n","import React, { Component } from 'react'    \r\nimport EmployeeService from '../service/EmployeeService'\r\n//import axios from 'axios'\r\n//const EMPLOYEE_API_URL = \"http://localhost:8080/api/v1/employees\"\r\nexport class CreateEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id:this.props.match.params.id,\r\n            firstName: '',\r\n            lastName: '',\r\n            emailId: ''\r\n        }\r\n        this.changeFirstName = this.changeFirstName.bind(this)\r\n        this.changeLastName = this.changeLastName.bind(this)\r\n        this.changeEmailId = this.changeEmailId.bind(this)\r\n        this.saveEmployee = this.saveEmployee.bind(this)\r\n    }\r\n    changeFirstName = e => {\r\n        this.setState({\r\n            firstName: e.target.value\r\n        })\r\n    }\r\n    changeLastName = e => {\r\n        this.setState({\r\n            lastName: e.target.value\r\n        })\r\n    }\r\n    changeEmailId = e => {\r\n        this.setState({\r\n            emailId: e.target.value\r\n        })\r\n    }\r\n    saveEmployee = e =>{\r\n        e.preventDefault();\r\n        let employee = {firstName : this.state.firstName, lastName : this.state.lastName, emailId:this.state.emailId}\r\n        console.log('employee Object', JSON.stringify(employee))\r\n        if(this.state.id < 0){\r\n            EmployeeService.createEmployee(employee).then(res=>{\r\n            this.props.history.push('/employees')\r\n            console.log('add')\r\n            })\r\n        }else {\r\n            EmployeeService.updateEmployeeById(employee,this.state.id).then(res=>{\r\n            this.props.history.push('/employees')\r\n            console.log('update')\r\n        })\r\n\r\n    }\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.id < 0){\r\n            return;\r\n        } else {\r\n            EmployeeService.getEmployeeById(this.state.id).then(res=>{\r\n            let emp = res.data;\r\n            this.setState({\r\n                firstName : emp.firstName,\r\n                lastName : emp.lastName,\r\n                emailId : emp.emailId\r\n            })\r\n        })\r\n    }\r\n    }\r\n   \r\n    cancel(){\r\n        this.props.history.push('/employees')\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h2 className=\"text-center\">Employee Form</h2>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>First Name</label>\r\n                                    <input type=\"text\" value={this.state.firstName} className=\"form-control\" placeholder=\"First name\" onChange={this.changeFirstName} />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Last Name</label>\r\n                                    <input type=\"text\" value={this.state.lastName} className=\"form-control\" placeholder=\"Last name\" onChange={this.changeLastName} />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email Id</label>\r\n                                    <input type=\"email\" value={this.state.emailId} className=\"form-control\" placeholder=\"Email Id\" onChange={this.changeEmailId} />\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={this.saveEmployee}>Submit</button>\r\n                                <button className=\"btn btn-danger\" style={{marginLeft:\"10px\"}} onClick={this.cancel.bind(this)} >Cancel</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEmployeeComponent\r\n","import React, { Component } from 'react'\r\nimport EmployeeService from '../service/EmployeeService'\r\n\r\nexport class ViewEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             id : this.props.match.params.id,\r\n             employee : {}\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        EmployeeService.getEmployeeById(this.state.id).then(res=>{\r\n            this.setState({employee:res.data})\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <div className=\"card col-md-6 offset-md-3\">\r\n                    <h3>View Employee</h3>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <label>First Name: </label>\r\n                            <div>{this.state.employee.firstName}</div>\r\n                         </div>\r\n                         <div className=\"row\">\r\n                            <label>Last Name: </label>\r\n                            <div>{this.state.employee.lastName}</div>\r\n                         </div>\r\n                         <div className=\"row\">\r\n                            <label>Email Id: </label>\r\n                            <div>{this.state.employee.emailId}</div>\r\n                         </div>\r\n                         </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEmployeeComponent\r\n","import React from 'react';\nimport './App.css';\nimport FooterComponent from './components/FooterComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport ListEmployeeComponent from './components/ListEmployeeComponent';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport CreateEmployeeComponent from './components/CreateEmployeeComponent';\nimport ViewEmployeeComponent from './components/ViewEmployeeComponent';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div className=\"container\">\n          <div className =\"row\">\n          <HeaderComponent />\n          </div>\n          <div className=\"container\" style={{marginTop:\"100px\"}}>\n            <Switch>\n              <Route exact path=\"/\" component={ListEmployeeComponent}/>\n              <Route path=\"/employees\" component={ListEmployeeComponent}/>\n              <Route path = \"/add-employee/:id\" component = {CreateEmployeeComponent}/>\n              <Route path = \"/view-employee/:id\" component = {ViewEmployeeComponent}/>\n            </Switch>\n          </div>\n          <div className=\"footer\">\n          <FooterComponent />\n          </div>\n        </div>\n      </Router>\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}